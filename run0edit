#!/bin/sh
# ------------------------------------------------------------------------------
# run0edit - edit a single file as root.
# version 0.2.0
#
# Please report issues at: https://github.com/HastD/run0edit/issues
#
# Copyright (C) 2025 Daniel Hast
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

set -euo pipefail

if [ "$(id -u)" = 0 ]; then
    echo 'run0edit should not be run as root.' >&2
    exit 1
fi
if [ "$#" = 0 ] || [ "$1" = '--help' ]; then
    echo 'run0edit allows a permitted user to edit a file as root.'
    echo 'Usage: run0edit "path/to/file"'
    echo 'To use another text editor, write the path to your text editor of choice to'
    echo '    /etc/run0edit/editor.conf'
    exit
elif [ "$#" -ne 1 ]; then
    echo 'Error: too many arguments.' >&2
    echo 'run0edit allows a permitted user to edit a file as root.'
    echo 'Usage: run0edit "path/to/file"'
    exit 1
fi

filename="$1"
# Ensure the file either exists and is a regular file, or does not exist but is
# in a directory that exists.
if [ -f "$filename" ]; then
    file_exists=1
    filename_or_dir="$filename"
elif [ ! -e "$filename" ]; then
    directory=$(dirname "$filename")
    if [ -d "$directory" ]; then
        file_exists=0
        filename_or_dir="$directory"
    else
        echo 'Invalid argument: directory does not exist!' >&2
        exit 1
    fi
else
    echo 'Invalid argument: not a regular file!' >&2
    exit 1
fi

# Determine text editor to use.
editor=''
etc_conf_path='/etc/run0edit/editor.conf'
usr_conf_path='/usr/share/run0edit/editor.conf'
if [ -f "$etc_conf_path" -a -r "$etc_conf_path" ]; then
    editor="$(cat "$etc_conf_path")"
elif [ -f "$usr_conf_path" -a -r "$usr_conf_path" ]; then
    editor="$(cat "$usr_conf_path")"
fi
if [ -f "$editor" -a -x "$editor" ]; then
    :
elif command -pv nano > /dev/null; then
    editor="$(command -pv nano)"
elif command -pv vi > /dev/null; then
    editor="$(command -pv vi)"
else
    # Can't find a text editor, so ask the user.
    until command -pv "$editor" > /dev/null; do
        read -p 'Enter path to text editor: ' editor
        editor="$(command -pv "$editor" || :)"
    done
fi

# Create a temporary file with a random suffix appended to the filename.
trunc_filename=$(basename "$filename" | head -c 64)
temp_filename=$(mktemp --tmpdir "${trunc_filename}.XXXXXXXXXX")

# Inner script to be run with elevated privileges:
if [ "$file_exists" = 1 ]; then
    script='\
        if ! cp "$1" "$2"; then
            echo "run0edit: failed to copy $1 to temporary file at $2";
            exit 1;
        fi
        if ! run0 --user="$SUDO_UID" "$3" "$2"; then
            echo "run0edit: failed to edit temporary file at $2";
            exit 1;
        fi
        if cmp -s "$2" "$1"; then
            echo "run0edit: $1 unchanged";
        else
            if ! cp "$2" "$1"; then
                echo "run0edit: unable to write temporary file at $2 to $1";
                exit 1;
            fi
        fi'
else
    script='\
        if ! run0 --user="$SUDO_UID" "$3" "$2"; then
            echo "run0edit: failed to edit temporary file at $2";
            exit 1;
        fi
        if [ -s "$2" ]; then
            touch "$1"
            if ! cp "$2" "$1"; then
                echo "run0edit: unable to write temporary file at $2 to $1";
                exit 1;
            fi
        else
            echo "run0edit: $1 not created";
        fi'
fi

# Escape backslashes and double-quotes in paths to be passed to ReadWritePaths.
escaped_path=$(realpath "$filename_or_dir" | sed -e 's/\\/\\\\/g' -e 's/"/\\"/g')
escaped_temp_path=$(echo "$temp_filename" | sed -e 's/\\/\\\\/g' -e 's/"/\\"/g')

run0 \
    --property="CapabilityBoundingSet=CAP_DAC_OVERRIDE" \
    --property="DevicePolicy=closed" \
    --property="LockPersonality=yes" \
    --property="MemoryDenyWriteExecute=yes" \
    --property="NoNewPrivileges=yes" \
    --property="PrivateDevices=yes" \
    --property="PrivateIPC=yes" \
    --property="PrivateNetwork=yes" \
    --property="ProcSubset=pid" \
    --property="ProtectClock=yes" \
    --property="ProtectControlGroups=yes" \
    --property="ProtectHome=read-only" \
    --property="ProtectHostname=yes" \
    --property="ProtectKernelModules=yes" \
    --property="ProtectKernelTunables=yes" \
    --property="ProtectProc=noaccess" \
    --property="ProtectSystem=strict" \
    --property="ReadWritePaths=\"$escaped_path\" \"$escaped_temp_path\"" \
    --property="RestrictAddressFamilies=AF_UNIX" \
    --property="RestrictRealtime=yes" \
    --property="RestrictSUIDSGID=yes" \
    --property="SystemCallArchitectures=native" \
    --property="SystemCallFilter=@system-service" \
    /bin/sh -c "$script" 'run0edit' "$filename" "$temp_filename" "$editor"
rm -f "$temp_filename"

